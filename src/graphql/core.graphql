query GeneSetLibraries {
  geneSetLibraries {
    nodes {
      name
      geneSetsByLibraryId {
        totalCount
      }
      backgroundGenes {
        totalCount
      }
    }
  }
}


query Stats {
  userGeneSets {
    totalCount
  }
  geneSets {
    totalCount
  }
  pmcs {
    totalCount
  }
}


query FetchUserGeneSet($id: UUID!) {
  userGeneSet(id: $id) {
    genes
    description
  }
}

# Perform enrichment analysis against a specific library
query EnrichmentQuery($genes: [String]!, $overlapGreaterThan: BigInt = "0", $offset: Int = 0, $first: Int = 10) {
  geneSetLibraries {
    nodes {
      name
      enrichLibraryBackground(
        genes: $genes
        overlapGreaterThan: $overlapGreaterThan
        offset: $offset
        first: $first
      ) {
        nodes {
          pvalue
          adjPvalue
          oddsRatio
          geneSet {
            term
          }
          overlapGenes {
            nodes {
              symbol
            }
          }
        }
        totalCount
      }
    }
  }
}

# Gene search: find all genesets containing certain gene(s)
query GeneSetLibraryGeneSearch($genes: [String]!, $offset: Int = 0, $first: Int = 10) {
  geneSetLibraries {
    nodes {
      name
      geneSearch(genes: $genes, offset: $offset, first: $first) {
        nodes {
          term
        }
        totalCount
      }
    }
  }
}

# Term search: find all genesets containing certain term(s)
query GeneSetLibraryTermSearch($terms: [String]!, $offset: Int = 0, $first: Int = 10) {
  geneSetLibraries {
    nodes {
      name
      termSearchCount(terms: $terms, offset: $offset, first: $first) {
        nodes {
          term
          id
          count
        }
        totalCount
      }
    }
  }
}

mutation AddUserGeneSet($genes: [String], $description: String = "") {
  addUserGeneSet(input: {genes: $genes, description: $description}) {
    userGeneSet {
      id
    }
  }
}


query GetPmcInfoByIds($pmcids: [String]!){
  getPmcInfoByIds(pmcids: $pmcids) {
    nodes {
      pmcid
      title
      yr
      doi
    }
  }
}

query TermsPmcs($pmcids: [String]!) {
  termsPmcsCount(pmcids: $pmcids) {
    nodes {
      pmc
      id
      term
      count
    }
  }
}

query ViewGeneSet($id: UUID!) {
  viewGeneSet(gsid: $id) {
    nodes
  }
}